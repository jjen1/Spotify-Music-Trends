-- 1. Which albums/singles did well and what labels were they under?:

WITH ranked_albums AS(
	SELECT 
		a.name AS album_name, 
		a.label,
		a.popularity AS album_popularity,
		a.album_id,
		ai.artist_id,
		ai.name as artist_name,
		ai.popularity AS artist_popularity,
		DENSE_RANK() OVER(ORDER BY a.popularity DESC) AS album_rank
	FROM album a
	LEFT JOIN artist_info ai
		ON ai.artist_id = a.artist_id
),
top_ten_labels AS(
	SELECT *
	FROM ranked_albums
	WHERE album_rank <= 10
	ORDER BY album_popularity DESC, artist_popularity DESC
)
SELECT DISTINCT label
FROM top_ten_labels;


-- 2. Knowing the popular labels, what are the top artists from those labels?:

WITH ranked_albums AS(
	SELECT 
		a.name AS album_name, 
		a.label,
		a.popularity AS album_popularity,
		a.album_id,
		ai.artist_id,
		ai.name as artist_name,
		ai.popularity AS artist_popularity,
		DENSE_RANK() OVER(ORDER BY a.popularity DESC) AS album_rank
	FROM album a
	LEFT JOIN artist_info ai
		ON ai.artist_id = a.artist_id
),
top_ten_labels AS(
	SELECT *
	FROM ranked_albums
	WHERE album_rank <= 10
	ORDER BY album_popularity DESC, artist_popularity DESC
),
artist_selection AS(
	SELECT DISTINCT ai.name AS artist_name
	FROM artist_info ai
	WHERE ai.artist_id IN (
	    SELECT DISTINCT artist_id
	    FROM album a
	    WHERE a.label IN (SELECT label FROM top_ten_labels) 
)
SELECT * FROM artist_selection;

-- 3. For the tracks that did well, what genre do the artists generally lie under?

WITH top_tracks AS(
	SELECT 
		DENSE_RANK() OVER(ORDER BY a.popularity DESC) AS album_rank,
		a.name AS album_name, 
		a.album_id,
		a.label,
		a.popularity AS album_popularity,
		a.type,
		a.total_tracks,
		ai.artist_id,
		ai.name as artist_name,
		ai.genre_1,
		ai.genre_2,
		ai.genre_3,
		ai.popularity AS artist_popularity,
		t.track_id,
		t.name AS track_name,
		t.track_number,
		t.popularity AS track_popularity,
		t.duration_sec,
		t.explicit
	FROM album a
	LEFT JOIN artist_info ai
		ON ai.artist_id = a.artist_id
	LEFT JOIN track t
		ON a.album_id = t.album_id
		AND a.artist_id = t.artist_id
),
genre_selection AS(
	SELECT 
		genre_1,
		genre_2,
		genre_3
	FROM top_tracks
	WHERE (track_popularity IS NOT NULL AND track_popularity >=50)
		AND (genre_1 IS NOT NULL OR genre_2 IS NOT NULL OR genre_3 IS NOT NULL)
),
genre_results AS(
	SELECT genre, COUNT(*) AS track_count
	FROM(
		SELECT genre_1 AS genre FROM genre_selection
		UNION ALL
		SELECT genre_2 AS genre FROM genre_selection
		UNION ALL
		SELECT genre_3 AS genre FROM genre_selection
	) AS all_genre
	WHERE genre IS NOT NULL
	GROUP BY genre
	ORDER BY track_count DESC
)
SELECT * FROM genre_results;

-- 4. Which track was the most popular from each album?

WITH ranked_album AS(
	SELECT
		DENSE_RANK() OVER(ORDER BY a.popularity DESC) AS album_rank,
		a.album_id,
		a.name AS album_name,
		a.type,
		a.label,
		a.popularity AS album_popularity,
		t.track_id,
		t.name AS track_name,
		t.popularity AS track_popularity,
		t.track_number,
		a.total_tracks,
		t.duration_sec,
		t.explicit,
		ai.artist_id,
		ai.name AS artist_name,
		ai.followers,
		ai.genre_1,
		ai.genre_2,
		ai.genre_3
	FROM album a
	LEFT JOIN artist_info ai
		ON ai.artist_id = a.artist_id
	LEFT JOIN track t
		ON a.album_id = t.album_id
		AND a.artist_id = t.artist_id
),
album_tracks AS(
	SELECT *, 
		ROW_NUMBER() OVER(PARTITION BY album_id ORDER BY track_popularity DESC) AS track_rank
	FROM ranked_album
	WHERE type = 'album'
	ORDER BY album_rank, track_rank 
),
popular_album_track AS(
	SELECT 
		album_name, 
		track_name,
		track_number,
		total_tracks
	FROM album_tracks
	WHERE track_rank = 1
)
SELECT * FROM popular_album_track

