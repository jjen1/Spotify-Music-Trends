-- 1. For the albums/singles that did well, what labels were they under?:

WITH ranked_albums AS (
    SELECT 
        a.label,
        a.popularity AS album_popularity,
        ai.popularity AS artist_popularity,
        DENSE_RANK() OVER (ORDER BY a.popularity DESC, ai.popularity DESC) AS album_rank
    FROM album a
    LEFT JOIN artist_info ai ON ai.artist_id = a.artist_id
),
top_labels AS(
	SELECT DISTINCT label
	FROM ranked_albums
	WHERE album_rank <= 50
)
SELECT * FROM top_labels;


-- 2. What are the top artists from those labels?:

WITH ranked_albums AS (
    SELECT 
        a.name AS album_name, 
        a.label,
        a.popularity AS album_popularity,
        ai.artist_id,
        ai.name AS artist_name,
        ai.popularity AS artist_popularity,
        DENSE_RANK() OVER(ORDER BY a.popularity DESC) AS album_rank
    FROM album a
    LEFT JOIN artist_info ai ON ai.artist_id = a.artist_id
),
top_labels AS (
    SELECT DISTINCT label
    FROM ranked_albums
    WHERE album_rank <= 50
),
top_artists AS (
    SELECT DISTINCT ai.name AS artist_name, a.label
    FROM artist_info ai
    JOIN album a ON ai.artist_id = a.artist_id
    WHERE a.label IN (SELECT label FROM top_labels)
)
SELECT artist_name, label
FROM top_artists
ORDER BY label;

-- 3. For the tracks that did well, what genre do the artists generally lie under?

WITH top_tracks AS (
    SELECT 
        a.name AS album_name, 
        a.album_id,
        a.label,
        a.popularity AS album_popularity,
        ai.artist_id,
        ai.name AS artist_name,
        ai.genre_1,
        ai.genre_2,
        ai.genre_3,
        t.track_id,
        t.name AS track_name,
        t.popularity AS track_popularity
    FROM album a
    LEFT JOIN artist_info ai ON ai.artist_id = a.artist_id
    LEFT JOIN track t ON a.album_id = t.album_id AND a.artist_id = t.artist_id
    WHERE t.popularity IS NOT NULL AND t.popularity >= 50
),
genre_selection AS (
    SELECT genre
    FROM (
        SELECT genre_1 AS genre FROM top_tracks WHERE genre_1 IS NOT NULL
        UNION ALL
        SELECT genre_2 AS genre FROM top_tracks WHERE genre_2 IS NOT NULL
        UNION ALL
        SELECT genre_3 AS genre FROM top_tracks WHERE genre_3 IS NOT NULL
    ) AS all_genres
),
genre_results AS(
	SELECT genre, COUNT(*) AS track_count
	FROM genre_selection
	GROUP BY genre
	ORDER BY track_count DESC
)
SELECT * FROM genre_results;

-- 4. Which track was the most popular from each album?

WITH ranked_album AS(
	SELECT
		DENSE_RANK() OVER(ORDER BY a.popularity DESC) AS album_rank,
		a.album_id,
		a.name AS album_name,
		a.type,
		t.name AS track_name,
		t.popularity AS track_popularity,
		t.track_number,
		a.total_tracks,
		ai.name AS artist_name
	FROM album a
	LEFT JOIN artist_info ai
		ON ai.artist_id = a.artist_id
	LEFT JOIN track t
		ON a.album_id = t.album_id
		AND a.artist_id = t.artist_id
),
album_tracks AS(
	SELECT *, 
		ROW_NUMBER() OVER(PARTITION BY album_id ORDER BY track_popularity DESC) AS track_rank
	FROM ranked_album
	WHERE type = 'album'
	ORDER BY album_rank, track_rank 
),
popular_album_track AS(
	SELECT 
		album_name, 
		artist_name,
		track_name,
		track_number,
		total_tracks
	FROM album_tracks
	WHERE track_rank = 1
)
SELECT * FROM popular_album_track
